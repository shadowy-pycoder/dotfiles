{
    "editor.minimap.enabled": false,
    "editor.unicodeHighlight.invisibleCharacters": true,
    "editor.unicodeHighlight.ambiguousCharacters": true,
    "editor.multiCursorModifier": "ctrlCmd",
    "editor.unicodeHighlight.includeStrings": false,
    "editor.glyphMargin": false,
    "editor.wordWrap": "on",
    "editor.wordWrapColumn": 120,
    "editor.scrollBeyondLastLine": false,
    "editor.useTabStops": true,
    "editor.folding": false,
    "editor.scrollbar.vertical": "auto",
    "editor.scrollbar.horizontal": "hidden",
    "editor.accessibilitySupport": "off",
    "editor.renderLineHighlight": "none",
    "editor.lineNumbers": "relative",
    "editor.autoClosingBrackets": "never",
    "editor.autoClosingQuotes": "never",
    "editor.bracketPairColorization.enabled": true,
    "workbench.activityBar.location": "default",
    "editor.guides.indentation": false,
    "editor.lightbulb.enabled": "off",
    "editor.semanticHighlighting.enabled": false,
    "editor.matchBrackets": "never",
    "editor.stickyScroll.enabled": false,
    "editor.smoothScrolling": true,
    "editor.codeLens": false,
    "files.autoSave": "onWindowChange",
    "files.associations": {
        "*.js": "javascript"
    },
    "[python]": {
        "editor.defaultFormatter": "charliermarsh.ruff",
        "editor.codeActionsOnSave": {
            "source.fixAll.ruff": "always",
            "source.organizeImports.ruff": "always"
        },
        "editor.formatOnSave": true,
        "editor.semanticHighlighting.enabled": true
    },
    "python.terminal.executeInFileDir": true,
    "python.terminal.activateEnvironment": false,
    "python.terminal.activateEnvInCurrentTerminal": false,
    "python.analysis.autoFormatStrings": false,
    "python.languageServer": "Pylance",
    "python.terminal.launchArgs": [],
    "python.analysis.exclude": ["**/.mypy_cache", "**/.ruff_cache"],
    "python.analysis.diagnosticSeverityOverrides": {
        "reportAbstractUsage": false,
        "reportUntypedClassDecorator": false,
        "reportUntypedBaseClass": false,
        "reportArgumentType": false,
        "reportAssertAlwaysTrue": false,
        "reportAssertTypeFailure": false,
        "reportAssignmentType": false,
        "reportAttributeAccessIssue": false,
        "reportCallInDefaultInitializer": false,
        "reportCallIssue": false,
        "reportConstantRedefinition": false,
        "reportDeprecated": false,
        "reportDuplicateImport": false,
        "reportFunctionMemberAccess": false,
        "reportGeneralTypeIssues": false,
        "reportImplicitOverride": false,
        "reportImplicitStringConcatenation": false,
        "reportImportCycles": false,
        "reportIncompatibleMethodOverride": false,
        "reportIncompatibleVariableOverride": false,
        "reportIncompleteStub": false,
        "reportInconsistentConstructor": false,
        "reportInconsistentOverload": false,
        "reportIndexIssue": false,
        "reportInvalidStringEscapeSequence": false,
        "reportInvalidStubStatement": false,
        "reportInvalidTypeArguments": false,
        "reportInvalidTypeForm": false,
        "reportInvalidTypeVarUse": false,
        "reportMatchNotExhaustive": false,
        "reportMissingImports": false,
        "reportMissingModuleSource": false,
        "reportMissingParameterType": false,
        "reportMissingSuperCall": false,
        "reportMissingTypeArgument": false,
        "reportMissingTypeStubs": false,
        "reportNoOverloadImplementation": false,
        "reportOperatorIssue": false,
        "reportOptionalCall": false,
        "reportOptionalContextManager": false,
        "reportOptionalIterable": false,
        "reportOptionalMemberAccess": false,
        "reportOptionalOperand": false,
        "reportOptionalSubscript": false,
        "reportOverlappingOverload": false,
        "reportPossiblyUnboundVariable": false,
        "reportPrivateImportUsage": false,
        "reportPrivateUsage": false,
        "reportPropertyTypeMismatch": false,
        "reportRedeclaration": false,
        "reportReturnType": false,
        "reportSelfClsParameterName": false,
        "reportShadowedImports": false,
        "reportTypeCommentUsage": false,
        "reportTypedDictNotRequiredAccess": false,
        "reportUnboundVariable": false,
        "reportUndefinedVariable": false,
        "reportUninitializedInstanceVariable": false,
        "reportUnknownArgumentType": false,
        "reportUnknownLambdaType": false,
        "reportUnknownMemberType": false,
        "reportUnknownParameterType": false,
        "reportUnknownVariableType": false,
        "reportUnnecessaryCast": false,
        "reportUnnecessaryComparison": false,
        "reportUnnecessaryContains": false,
        "reportUnnecessaryIsInstance": false,
        "reportUnnecessaryTypeIgnoreComment": false,
        "reportUnsupportedDunderAll": false,
        "reportUntypedFunctionDecorator": false,
        "reportUntypedNamedTuple": false,
        "reportUnusedCallResult": false,
        "reportUnusedClass": false,
        "reportUnusedCoroutine": false,
        "reportUnusedExcept": false,
        "reportUnusedExpression": false,
        "reportUnusedFunction": false,
        "reportUnusedImport": false,
        "reportUnusedVariable": false,
        "reportWildcardImportFromLibrary": false
    },
    "python.analysis.logLevel": "Error",
    "[go]": {
        "editor.insertSpaces": true,
        "editor.formatOnSave": true,
        "editor.defaultFormatter": "golang.go"
    },
    "gopls": {},
    "go.toolsManagement.autoUpdate": true,
    "[javascript]": {
        "editor.maxTokenizationLineLength": 2500,
        "editor.defaultFormatter": "esbenp.prettier-vscode",
        "editor.formatOnType": true, // required
        "editor.formatOnPaste": true, // optional
        "editor.formatOnSave": false, // optional
        "editor.formatOnSaveMode": "file", // required to format on save
        "files.autoSave": "onFocusChange", // optional but recommended
        "editor.codeActionsOnSave": {
            "source.fixAll.eslint": "never"
        }
    },
    "javascript.updateImportsOnFileMove.enabled": "prompt",
    "javascript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets": true,
    "javascript.preferences.quoteStyle": "single",
    "javascript.preferences.importModuleSpecifier": "relative",
    "javascript.suggest.completeJSDocs": true,
    "javascript.format.enable": true,
    "javascript.autoClosingTags": true,
    "javascript.referencesCodeLens.enabled": true,
    "javascript.suggestionActions.enabled": false,
    "javascript.validate.enable": true,
    "[vue]": {
        "editor.maxTokenizationLineLength": 2500,
        "editor.defaultFormatter": "esbenp.prettier-vscode",
        "editor.formatOnType": false, // required
        "editor.formatOnPaste": true, // optional
        "editor.formatOnSave": true, // optional
        "editor.formatOnSaveMode": "file", // required to format on save
        "files.autoSave": "onFocusChange", // optional but recommended
        "editor.codeActionsOnSave": {
            "source.fixAll.eslint": "always"
        }
    },
    "[typescript]": {},
    "emmet.includeLanguages": {
        "javascript": "javascriptreact"
    },
    "prettier.arrowParens": "avoid",
    "prettier.jsxSingleQuote": true,
    "prettier.printWidth": 120,
    "prettier.useTabs": false,
    "prettier.tabWidth": 4,
    "prettier.singleQuote": true,
    "prettier.singleAttributePerLine": true,
    "prettier.vueIndentScriptAndStyle": true,
    "npm-intellisense.scanDevDependencies": true,
    "files.exclude": {
        "**/.git": true,
        "**/.svn": true,
        "**/.hg": true,
        "**/CVS": true,
        "**/.DS_Store": true,
        "**/Thumbs.db": true,
        "**/__pycache__": true,
        "**/.cache": true,
        "**/.idea": true,
        "**/.pytest_cache": true,
        "**/.mypy_cache": true,
        "**/.ruff_cache": true
    },
    "files.watcherExclude": {
        "/.git/objects/": true,
        "/.git/subtree-cache/": true,
        "/node_modules/*/": true,
        "/.hg/store/": true,
        "/.mypy_cache/*": true,
        "/venv/*": true,
        "/.ruff_cache/*": true,
        "/.pytest_cache/*": true
    },
    "search.exclude": {
        "**/node_modules/**": true,
        "**/dist/**": true,
        "**/tmp/**": true,
        "**/.git/objects/**": true,
        "**/.git/subtree-cache/**": true
    },
    "debug.allowBreakpointsEverywhere": true,
    "debug.inlineValues": "on",
    "debug.console.acceptSuggestionOnEnter": "on",
    "workbench.colorCustomizations": {
        // The background is optional
        //"terminal.background": "#282a36",
        "terminalCursor.background": "#282a36",
        "terminalCursor.foreground": "#97979b",
        "terminal.selectionBackground": "#97979b33",
        "terminal.foreground": "#eff0eb",
        "terminal.ansiBlack": "#282a36",
        "terminal.ansiRed": "#ff5c57",
        "terminal.ansiGreen": "#5af78e",
        "terminal.ansiYellow": "#f3f99d",
        "terminal.ansiBlue": "#57c7ff",
        "terminal.ansiMagenta": "#ff6ac1",
        "terminal.ansiCyan": "#9aedfe",
        "terminal.ansiWhite": "#f1f1f0",
        "terminal.ansiBrightBlack": "#686868",
        "terminal.ansiBrightRed": "#ff5c57",
        "terminal.ansiBrightGreen": "#5af78e",
        "terminal.ansiBrightYellow": "#f3f99d",
        "terminal.ansiBrightBlue": "#57c7ff",
        "terminal.ansiBrightMagenta": "#ff6ac1",
        "terminal.ansiBrightCyan": "#9aedfe",
        "terminal.ansiBrightWhite": "#eff0eb"
    },
    "launch": {
        "configurations": [],
        "compounds": []
    },
    "workbench.startupEditor": "none",
    "workbench.iconTheme": "vscode-icons",
    "workbench.sideBar.location": "left",
    "extensions.ignoreRecommendations": true,
    "terminal.integrated.gpuAcceleration": "auto",
    "http.proxySupport": "off",
    "explorer.confirmDelete": false,
    "liveServer.settings.donotShowInfoMsg": true,
    "liveServer.settings.AdvanceCustomBrowserCmdLine": "",
    "liveServer.settings.donotVerifyTags": true,
    "explorer.confirmDragAndDrop": false,
    "vsicons.dontShowNewVersionMessage": true,
    "telemetry.telemetryLevel": "all",
    "codeium.enableConfig": {
        "*": false,
        "markdown": true,
        "yaml": false,
        "go": false,
        "c": false
    },
    //"codeium.enableCodeLens": false,
    "codeium.enableExplainProblem": false,
    "codeium.enableCommandSideHintEducation": false,
    "diffEditor.ignoreTrimWhitespace": false,
    "editor.unicodeHighlight.allowedLocales": {
        "ru": true
    },
    "update.mode": "none",
    "prettier.useEditorConfig": false,
    "prettier.ignorePath": "",
    "workbench.editorAssociations": {
        "*.bin": "hexEditor.hexedit"
    },
    "editor.fontFamily": "'DejaVuSansM Nerd Mono', 'monospace', monospace",
    "editor.rename.enablePreview": false,
    "security.workspace.trust.untrustedFiles": "open",
    "mypy.dmypyExecutable": "~/misc/venv313/bin/dmypy",
    "ruff.configuration": "${userHome}/.ruff-config/ruff.toml",
    "ruff.lineLength": 120,
    "ruff.importStrategy": "useBundled",
    "ruff.format.args": ["--config=${userHome}/.ruff-config/ruff.toml"],
    "ruff.lint.args": ["--config=${userHome}/.ruff-config/ruff.toml"],
    "terminal.integrated.fontFamily": "monospace",
    "gitlens.changes.locations": ["gutter", "line", "overview"],
    "gitlens.hovers.currentLine.over": "line",
    "gitlens.currentLine.enabled": false,
    "gitlens.codeLens.enabled": false,
    "extensions.autoCheckUpdates": false,
    "extensions.autoUpdate": false,
    "search.followSymlinks": false,
    "vim.vimrc.enable": true,
    // Vim Configuration
    // Enable easymotion plugin for quick navigation
    "vim.easymotion": false,
    // Enable incremental search highlighting
    "vim.incsearch": true,
    // Use system clipboard for vim operations
    "vim.useSystemClipboard": true,
    // Enable Ctrl key combinations
    "vim.useCtrlKeys": true,
    // Enable search highlight
    "vim.hlsearch": true,
    // Set space as the leader key
    "vim.leader": " ",
    // Enable vim-sneak plugin for improved motion
    "vim.sneak": false,
    // Use relative line numbers in normal mode
    "vim.smartRelativeLine": true,
    // Fix common fold-related issues
    "vim.foldfix": true,
    // Enable and configure yank highlighting
    "vim.highlightedyank.enable": true,
    "vim.highlightedyank.duration": 200,
    // Customize search highlight color
    "vim.searchHighlightColor": "rgba(180, 142, 173, 0.5)",
    // Handle specific keys
    "vim.handleKeys": {
        // Keep Ctrl+d for scrolling down
        "<C-d>": true,
        // Keep Ctrl+u for scrolling up
        "<C-u>": true,
        // Disable Ctrl+f to use VS Code's find instead
        "<C-f>": false,
        "<C-h>": false
    },
    // Insert Mode Keybindings
    "vim.insertModeKeyBindings": [
        {
            // Exit insert mode by pressing 'j' twice quickly
            "before": ["j", "j"],
            "after": ["<Esc>"]
        }
    ],
    // Normal Mode Keybindings
    "vim.normalModeKeyBindingsNonRecursive": [
        // Basic Operations
        {
            // Delete current line with leader+d
            "before": ["<leader>", "d"],
            "after": ["d", "d"]
        },
        {
            // Clear search highlighting with Ctrl+n
            "before": ["<C-n>"],
            "commands": [":nohl"]
        },
        {
            // Insert line break above cursor with K
            "before": ["K"],
            "commands": ["lineBreakInsert"],
            "silent": true
        },
        // Window Management
        {
            // Split editor with leader+w
            "before": ["<leader>", "w"],
            "commands": ["workbench.action.splitEditor"]
        },
        {
            // Save current file with leader+w+w
            "before": ["<leader>", "w", "w"],
            "commands": [":w", "workbench.action.files.save"]
        },
        {
            // Close current file with leader+w+c
            "before": ["<leader>", "w", "c"],
            "commands": ["workbench.action.closeActiveEditor"]
        },
        // Sidebar and Explorer
        {
            // Toggle sidebar and focus explorer with leader+e
            "before": ["<leader>", "e"],
            "commands": [
                "workbench.action.toggleSidebarVisibility"
                // "workbench.files.action.focusFilesExplorer" // #TODO: dosent work as expected
            ]
        },
        {
            // Reveal current file in explorer with leader+f
            "before": ["<leader>", "f"],
            "commands": ["revealInExplorer"]
        },
        // File Operations
        {
            // Copy current file path with leader+f+y
            "before": ["<leader>", "f", "y"],
            "commands": ["copyFilePath"]
        },
        {
            // Create new file in current directory with leader+f+n
            "before": ["<leader>", "f", "n"],
            "commands": ["explorer.newFile"]
        },
        // Code Actions
        {
            // Toggle line comment with leader+c
            "before": ["<leader>", "c"],
            "commands": ["editor.action.commentLine"]
        }
    ],
    // Visual Mode Keybindings
    "vim.visualModeKeyBindings": [
        {
            // Comment selected lines and exit visual mode with leader+c
            "before": ["<leader>", "c"],
            "commands": ["editor.action.commentLine", "extension.vim_escape"]
        },
        {
            // Select all occurrences of current selection with leader+a
            "before": ["<leader>", "a"],
            "commands": ["editor.action.selectHighlights"]
        },
        {
            // Sort selected lines
            "before": ["<leader>", "s", "s"],
            "commands": ["editor.action.sortLinesAscending"]
        },
        {
            // Transform to uppercase
            "before": ["<leader>", "u"],
            "commands": ["editor.action.transformToUppercase"]
        },
        {
            // Transform to lowercase
            "before": ["<leader>", "l"],
            "commands": ["editor.action.transformToLowercase"]
        }
    ]
}
